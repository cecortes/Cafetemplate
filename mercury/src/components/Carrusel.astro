---
import CarruselCard from "@/components/CarruselCard.astro";
import IconButton from "@/components/IconButton.astro";

---
<section id="carrusel" class="carrusel" data-reveal="right">

  <div class="carrusel-title">
      <h2>Especiales Rentoy</h2>
      <p>Disfruta de una experiencia única con nuestros platillos y bebidas.</p>
  </div>

  <div class="carrusel-container">
    
    <CarruselCard 
    title="Espresso árabe" 
    desc="Un exquisito café con extracto árabe para iniciar tu día" price="$45 MXN" 
    img="/cafe1.webp" 
    alt="Café artesanal"/>

    <CarruselCard 
    title="Desayuno Rentoy" 
    desc="Pan artesanal con huevo, tocino y jugo natural."
    price="$120 MXN"
    img="/desayuno.webp" 
    alt="Desayuno con pan artesanal"/>

    <CarruselCard 
    title="Latte Cremoso" 
    desc="Café con leche vaporizada y arte latte."
    price="$55 MXN"
    img="/latte.webp" 
    alt="Latte en taza decorada"/>

    <CarruselCard 
    title="Cerveza de Barril" 
    desc="Cerveza de barril para momentos especiales."
    price="$65 MXN"
    img="/barril.webp" 
    alt="Cerveza de barril"/>

    <CarruselCard 
    title="Cerveza Heineken" 
    desc="Cerveza fría para disfrutar con amigos. Tarro o michelada"
    price="$40 MXN"
    img="/cerveza.webp" 
    alt="Cerveza fría para disfrutar con amigos. Tarro o michelada"/>

    <CarruselCard 
    title="Cuba Libre" 
    desc="Cuba libre con un toque especial y el sabor de la Habana"
    price="$80 MXN"
    img="/cubalibre.webp" 
    alt="Cuba libre"/>

    <CarruselCard 
    title="Ambiente Rentoy" 
    desc="Disfruta tu bebida en un espacio cálido y acogedor."
    price="Incluido"
    img="/ambiente.webp" 
    alt="Interior cálido del restaurante"/>

  </div>

  <IconButton href='/' aria='Next section' name='next' text='Descubrir más'/>
</section>

<style>
@import 'tailwindcss';
/* Carrusel personalizado con imágenes de 512px y texto */
.carrusel {
  height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  background: linear-gradient(to right, #ebdd43c2, #783b05c2);
  overflow: hidden;
}

.carrusel-container {
  display: flex;
  overflow-x: auto;
  scroll-snap-type: x mandatory;
  scroll-behavior: smooth;
  width: 100%;
  padding: 2rem;
  gap: 2rem;
  scroll-padding-left: 2rem;
  @apply md:gap-[8rem] md:scroll-pl-[10rem];
}

.carrusel-container::-webkit-scrollbar {
  display: none;
}

.carrusel-container {
  -ms-overflow-style: none;
  scrollbar-width: none;
}

.carrusel-title {
  width: 90%;
  text-align: center;
}

.carrusel-title h2 {
  font-family: 'Montserrat', serif;
  font-optical-sizing: auto;
  color: #5a3e36;
  @apply mt-5 text-3xl md:text-6xl md:mt-6;
}

.carrusel-title p {
  text-align: center;
  font-family: 'Montserrat', serif;
  color: #463124;
  font-size: 1.1rem;
  font-weight: 700;
  font-style: italic;
  @apply mt-2 mb-2 md:text-2xl md:mt-4 md:mb-4;
}
</style>

<script type="module">
  // Astro island-style router simulation for page sections
  document.addEventListener("DOMContentLoaded", () => {

    const links = document.querySelectorAll("a[href^='#']");

    links.forEach(link => {
      link.addEventListener("click", e => {
        e.preventDefault();
        const target = document.querySelector(link.getAttribute("href"));
        if (target) {
          target.scrollIntoView({ behavior: "smooth" });
          history.pushState(null, '', link.getAttribute("href"));
        }
      });
    });

    // Scroll reveal
    const revealElements = document.querySelectorAll('[data-reveal]');
    
    const observer = new IntersectionObserver(entries => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('revealed');
          observer.unobserve(entry.target);
        }
      });
    }, { threshold: 0.1 });

    revealElements.forEach(el => observer.observe(el));

    const carrusel = document.querySelector('.carrusel-container');
    const items = document.querySelectorAll('.carrusel-item');
    const images = document.querySelectorAll('.carrusel-item img');
    let scrollIndex = 0;
    const totalItems = items.length;
    let interval;
    let isHovered = false;

    function autoScroll() {
      interval = setInterval(() => {
        if (!isHovered) {
          scrollIndex = (scrollIndex + 1) % totalItems;
          const scrollTo = items[scrollIndex].offsetLeft - carrusel.offsetLeft;
          carrusel.scrollTo({ left: scrollTo, behavior: 'smooth' });
        }
      }, 5000);
    }

    function stopAutoScroll() {
      clearInterval(interval);
    }

    images.forEach(img => {
      img.addEventListener('mouseenter', () => {
        isHovered = true;
        stopAutoScroll();
      });

      img.addEventListener('mouseleave', () => {
        isHovered = false;
        autoScroll();
      });
    });

    autoScroll();
  });
</script>